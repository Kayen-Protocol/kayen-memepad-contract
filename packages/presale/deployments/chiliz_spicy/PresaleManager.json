{
  "address": "0x6d8E079f9b66905c3A29f03f3eAFAFB2aD8e56De",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Configuration",
          "name": "_config",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "paymentToken",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pairAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "presaleAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "totalSupply",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "saleAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "data",
          "type": "string"
        }
      ],
      "name": "PresaleCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "getPresale",
      "outputs": [
        {
          "internalType": "contract IPresale",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "getProgress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "isBondingCurveEnd",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "target",
          "type": "address"
        }
      ],
      "name": "isPending",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isRegistered",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "presales",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "presalesByPool",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IPresale",
          "name": "presale",
          "type": "address"
        }
      ],
      "name": "register",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x083567c4d1c2ebc8aa270682681c59ea2bffe0dc1e0c01303ae6c11ab5c401f3",
  "receipt": {
    "to": null,
    "from": "0xa5B5bE1ecB74696eC27E3CA89E5d940c9dbcCc56",
    "contractAddress": "0x6d8E079f9b66905c3A29f03f3eAFAFB2aD8e56De",
    "transactionIndex": 0,
    "gasUsed": "801832",
    "logsBloom": "0x
    "blockHash": "0xc4fc64103496f695ce963fe2e82ace54316d4b5378a2b72d963b580001909bdf",
    "transactionHash": "0x083567c4d1c2ebc8aa270682681c59ea2bffe0dc1e0c01303ae6c11ab5c401f3",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 15721989,
        "transactionHash": "0x083567c4d1c2ebc8aa270682681c59ea2bffe0dc1e0c01303ae6c11ab5c401f3",
        "address": "0x0000000000000000000000000000000000007005",
        "topics": [
          "0x33c981baba081f8fd2c52ac6ad1ea95b6814b4376640f55689051f6584729688",
          "0x000000000000000000000000a5b5be1ecb74696ec27e3ca89e5d940c9dbccc56"
        ],
        "data": "0x0000000000000000000000006d8e079f9b66905c3a29f03f3eafafb2ad8e56de",
        "logIndex": 0,
        "blockHash": "0xc4fc64103496f695ce963fe2e82ace54316d4b5378a2b72d963b580001909bdf"
      },
      {
        "transactionIndex": 0,
        "blockNumber": 15721989,
        "transactionHash": "0x083567c4d1c2ebc8aa270682681c59ea2bffe0dc1e0c01303ae6c11ab5c401f3",
        "address": "0x6d8E079f9b66905c3A29f03f3eAFAFB2aD8e56De",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000a5b5be1ecb74696ec27e3ca89e5d940c9dbccc56"
        ],
        "data": "0x",
        "logIndex": 1,
        "blockHash": "0xc4fc64103496f695ce963fe2e82ace54316d4b5378a2b72d963b580001909bdf"
      }
    ],
    "blockNumber": 15721989,
    "cumulativeGasUsed": "801832",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xB585b51051c258e363c1977fd0fa2Fa03DAfE490"
  ],
  "numDeployments": 2,
  "solcInputHash": "fe4236ec33831dd4fcec0a9b276b32bd",
  "metadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Configuration\",\"name\":\"_config\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"paymentToken\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pairAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"presaleAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalSupply\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"saleAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"data\",\"type\":\"string\"}],\"name\":\"PresaleCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"getPresale\",\"outputs\":[{\"internalType\":\"contract IPresale\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"getProgress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isBondingCurveEnd\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"isPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"presales\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"presalesByPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IPresale\",\"name\":\"presale\",\"type\":\"address\"}],\"name\":\"register\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/presale-manager/PresaleManager.sol\":\"PresaleManager\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@kayen/token/contracts/IBlacklist.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.7.0;\\n\\ninterface IBlacklist {\\n    function isTransferBlacklisted(address target) external view returns (bool);\\n}\",\"keccak256\":\"0xc1d2c827b4b6417be6e296a6ac760b199e9ec78dd1197f86e0f4f11a7922938f\",\"license\":\"GPL-3.0\"},\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Configuration.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@kayen/token/contracts/IBlacklist.sol\\\";\\n\\ncontract Configuration is Ownable, IBlacklist {\\n    mapping(address => bool) public paymentTokenWhitlist;\\n    mapping(address => bool) public distributorWhitelist;\\n    mapping(address => bool) public presaleMakers;\\n    mapping(address => bool) public isPoolPaused;\\n    mapping(address => bool) public transferBlacklist;\\n    bool public isAllPoolPaused;\\n\\n    address public feeVault;\\n\\n    uint24 public defaultDistributionFeeRate = 1e6 / 100; // 0.01 = 1%\\n    mapping(address => uint24) public distributionFeeRate;\\n\\n    // amount of payment token as minting fee\\n    uint256 public mintingFee = 0;\\n\\n    uint24 public defaultTradeFee = 1e6 / 100; // 0.01 = 1%\\n    mapping(address => uint24) public tradeFee;\\n\\n    uint24 public maxTreasuryRate = 8e5; // 80%\\n\\n    constructor(address _feeVault) {\\n        feeVault = _feeVault;\\n    }\\n\\n    function putPresaleMaker(address presaleMaker) external onlyOwner {\\n        presaleMakers[presaleMaker] = true;\\n    }\\n\\n    function removePresaleMaker(address presaleMaker) external onlyOwner {\\n        presaleMakers[presaleMaker] = false;\\n    }\\n\\n    function allowTokenForPayment(address token) external onlyOwner {\\n        paymentTokenWhitlist[token] = true;\\n    }\\n\\n    function disallowTokenForPayment(address token) external onlyOwner {\\n        paymentTokenWhitlist[token] = false;\\n    }\\n\\n    function allowDistributor(address distributor) external onlyOwner {\\n        distributorWhitelist[distributor] = true;\\n    }\\n\\n    function disallowDistributor(address distributor) external onlyOwner {\\n        distributorWhitelist[distributor] = false;\\n    }\\n\\n    function isDistributorWhitelisted(address distributor) external view returns (bool) {\\n        return distributorWhitelist[distributor];\\n    }\\n\\n    function putDefaultDistributionFeeRate(uint24 feeRate) external onlyOwner {\\n        defaultDistributionFeeRate = feeRate;\\n    }\\n\\n    function putDistributionFeeRateForToken(address token, uint24 feeRate) external onlyOwner {\\n        distributionFeeRate[token] = feeRate;\\n    }\\n\\n    function getDistributionFeeRate(address token0, address token1) external view returns (uint24) {\\n        uint24 fee0 = distributionFeeRate[token0];\\n        uint24 fee1 = distributionFeeRate[token1];\\n        if(fee0 == 0 && fee1 == 0) {\\n            return defaultDistributionFeeRate;\\n        }\\n        return fee0 > fee1 ? fee0 : fee1;\\n    }\\n\\n    function putFeeVault(address vault) external onlyOwner {\\n        require(vault != address(0), \\\"Configuration: fee vault cannot be zero address\\\");\\n        feeVault = vault;\\n    }\\n\\n    function getFeeVault() external view returns (address) {\\n        return feeVault;\\n    }\\n\\n    function isPaused(address pool) external view returns (bool) {\\n        return isPoolPaused[pool] || isPausedAll();\\n    }\\n\\n    function isPausedAll() public view returns (bool) {\\n        return isAllPoolPaused;\\n    }\\n\\n    function pause(address pool) external onlyOwner {\\n        isPoolPaused[pool] = true;\\n    }\\n\\n    function unpause(address pool) external onlyOwner {\\n        isPoolPaused[pool] = false;\\n    }\\n\\n    function pauseAll() external onlyOwner {\\n        isAllPoolPaused = true;\\n    }\\n\\n    function unpauseAll() external onlyOwner {\\n        isAllPoolPaused = false;\\n    }\\n\\n    function putMintingFee(uint256 fee) external onlyOwner {\\n        mintingFee = fee;\\n    }\\n    \\n    function putDefaultTradeFee(uint24 _tradeFee) external onlyOwner {\\n        assertTradeFee(_tradeFee);\\n        defaultTradeFee = _tradeFee;\\n    }\\n\\n    function putTradeFeeForToken(address token, uint24 _tradeFee) external onlyOwner {\\n        assertTradeFee(_tradeFee);\\n        tradeFee[token] = _tradeFee;\\n    }\\n\\n    function getTradeFee(address token0, address token1) external view returns (uint24) {\\n        uint24 fee0 = tradeFee[token0];\\n        uint24 fee1 = tradeFee[token1];\\n        if(fee0 == 0 && fee1 == 0) {\\n            return defaultTradeFee;\\n        }\\n        return fee0 > fee1 ? fee0 : fee1;\\n    }\\n\\n    function putMaxTreasuryRate(uint24 rate) external onlyOwner {\\n        require(rate <= 1e6, \\\"Configuration: max treasury rate must be less than 1e6\\\");\\n        maxTreasuryRate = rate;\\n    }\\n\\n    function getMaxTreasuryRate() external view returns (uint24) {\\n        return maxTreasuryRate;\\n    }\\n\\n    function assertTradeFee(uint24 _tradeFee) internal view {\\n        // max 2%\\n        require(_tradeFee <= 1e6 / 50, \\\"Configuration: trade fee must be less than 1%\\\");\\n    }\\n\\n    function assertDistributeFee(uint24 _tradeFee) internal view {\\n        // max 2%\\n        require(_tradeFee <= 1e6 / 50, \\\"Configuration: trade fee must be less than 1%\\\");\\n    }\\n\\n    function putTransferBlacklist(address target) external onlyOwner {\\n        transferBlacklist[target] = true;\\n    }\\n\\n    function removeTransferBlacklist(address target) external onlyOwner {\\n        transferBlacklist[target] = false;\\n    }\\n\\n    function isTransferBlacklisted(address target) external view returns (bool) {\\n        return transferBlacklist[target];\\n    }\\n\\n}\",\"keccak256\":\"0xf9ba091eb371665401ec2c10759b57a4ebafdc9c2ea9f5d08813c28f1a910dde\",\"license\":\"GPL-3.0\"},\"contracts/distributor/IDistributor.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.8.7;\\n\\ninterface IDistributor {\\n    function distribute(address token0, address token1, uint256 expectedPriceZeroToOne, bytes calldata data) external;\\n}\",\"keccak256\":\"0x0404bbc92285419f68613c47ed7efd25e073b022b7973afc117430baae806e57\",\"license\":\"GPL-3.0\"},\"contracts/presale-manager/PresaleManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"../presale/IPresale.sol\\\";\\nimport \\\"../Configuration.sol\\\";\\n\\ncontract PresaleManager is Ownable {\\n    mapping(address => bool) public isRegistered;\\n    mapping(address => address) public presales;\\n    mapping(address => address) public presalesByPool;\\n    Configuration config;\\n\\n    constructor(Configuration _config) Ownable() {\\n        config = _config;\\n    }\\n\\n    function register(IPresale presale) external {\\n        require(config.presaleMakers(msg.sender), \\\"PresaleManager: FORBIDDEN\\\");\\n        (address tokenAddress, string memory name, string memory symbol, uint256 totalSupply) = presale.tokenInfo();\\n        require(!isRegistered[tokenAddress], \\\"PresaleManager: ALREADY_REGISTERED\\\");\\n        IPresale.PresaleInfo memory presaleInfo =  presale.info();\\n        presales[tokenAddress] = address(presale);\\n        isRegistered[tokenAddress] = true;\\n        presalesByPool[presaleInfo.pool] = address(presale);\\n        emit PresaleCreated(\\n            name,\\n            symbol,\\n            tokenAddress,\\n            presaleInfo.paymentToken,\\n            presaleInfo.pool,\\n            presaleInfo.amountToRaise,\\n            totalSupply,\\n            presaleInfo.amountToSale,\\n            presaleInfo.data\\n        );\\n    }\\n\\n    function isPending(address target) external view returns (bool) {\\n        IPresale presale = getPresale(target);\\n        return presale.info().startTimestamp > block.timestamp;\\n    }\\n\\n    function getPresale(address target) public view returns (IPresale) {\\n        if(address(presales[target]) == address(0)) {\\n            return IPresale(presalesByPool[target]);\\n        }\\n        return IPresale(presales[target]);\\n    }\\n\\n    function getProgress(address target) public view returns (uint256) {\\n        return getPresale(target).getProgress();\\n    }\\n\\n    function isBondingCurveEnd(address target) public view returns (bool) {\\n        return getPresale(target).isBondingCurveEnd();\\n    }\\n\\n\\n    event PresaleCreated(\\n        string name,\\n        string symbol,\\n        address token,\\n        address paymentToken,\\n        address pairAddress,\\n        uint256 presaleAmount,\\n        uint256 totalSupply,\\n        uint256 saleAmount,\\n        string data\\n    );\\n}\\n\",\"keccak256\":\"0x6ceb22d6aba1924a74e3949decdcc93f1f9b94f3882fc591b8fd6771b02f1056\",\"license\":\"GPL-3.0\"},\"contracts/presale/IPresale.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\npragma solidity >=0.8.7;\\n\\nimport {IDistributor} from \\\"../distributor/IDistributor.sol\\\";\\n\\ninterface IPresale {\\n    function tokenInfo() external returns (address, string memory, string memory, uint256);\\n    function getProgress() external view returns (uint256);\\n    function isBondingCurveEnd() external view returns (bool);\\n    function distribute(IDistributor distributor, bytes calldata data) external;\\n    function info() external view returns (PresaleInfo memory);\\n    function isEnd() external view returns (bool);\\n\\n    struct PresaleInfo {\\n        address minter;\\n        address token;\\n        address pool;\\n\\n        address paymentToken;\\n        uint256 amountToRaise;\\n\\n        uint256 amountToSale;\\n        string data;\\n\\n        // 1e6 => 100%;\\n        uint24 toTreasuryRate;\\n\\n        bool isEnd;\\n        uint256 startTimestamp;\\n        bool isNewToken;\\n    }\\n\\n    event Distributed();\\n}\",\"keccak256\":\"0xa2b642b65e4bf1fb60432ccd5f07759f33023829a69586623cb737be3f5e6247\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610ca0380380610ca083398101604081905261002f916100ad565b6100383361005d565b600480546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b610bb4806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a00745b611610071578063a00745b61461012f578063aef7650114610142578063c3c5a54714610163578063d4ed77b514610186578063efcd708f146101af578063f2fde38b146101d857600080fd5b80634420e486146100ae57806356131006146100c3578063715018a6146100eb57806377ce88eb146100f35780638da5cb5b1461011e575b600080fd5b6100c16100bc3660046107cd565b6101eb565b005b6100d66100d13660046107cd565b6104c2565b60405190151581526020015b60405180910390f35b6100c1610534565b6101066101013660046107cd565b610548565b6040516001600160a01b0390911681526020016100e2565b6000546001600160a01b0316610106565b6100d661013d3660046107cd565b6105a7565b6101556101503660046107cd565b610629565b6040519081526020016100e2565b6100d66101713660046107cd565b60016020526000908152604090205460ff1681565b6101066101943660046107cd565b6003602052600090815260409020546001600160a01b031681565b6101066101bd3660046107cd565b6002602052600090815260409020546001600160a01b031681565b6100c16101e63660046107cd565b610695565b60048054604051632066bf6d60e21b815233928101929092526001600160a01b03169063819afdb490602401602060405180830381865afa158015610234573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102589190610806565b6102a95760405162461bcd60e51b815260206004820152601960248201527f50726573616c654d616e616765723a20464f5242494444454e0000000000000060448201526064015b60405180910390fd5b600080600080846001600160a01b0316636addb6636040518163ffffffff1660e01b81526004016000604051808303816000875af11580156102ef573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103179190810190610918565b6001600160a01b0384166000908152600160205260409020549397509195509350915060ff16156103955760405162461bcd60e51b815260206004820152602260248201527f50726573616c654d616e616765723a20414c52454144595f5245474953544552604482015261115160f21b60648201526084016102a0565b6000856001600160a01b031663370158ea6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103d5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103fd91908101906109aa565b6001600160a01b0380871660009081526002602090815260408083208054858d166001600160a01b031991821681179092556001808552838620805460ff19169091179055828701805190961685526003909352928190208054909216909217905560608301519151608084015160a085015160c086015193519596507f5907e68cbd0987ce3c33605889d26eb3a84e33833c3ccb79192c00ca73f70731956104b2958b958b958e95929490938c9290610ae4565b60405180910390a1505050505050565b60006104cd82610548565b6001600160a01b031663d4ac98fc6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e9190610806565b92915050565b61053c61070e565b6105466000610768565b565b6001600160a01b0381811660009081526002602052604081205490911661058857506001600160a01b039081166000908152600360205260409020541690565b506001600160a01b039081166000908152600260205260409020541690565b6000806105b383610548565b905042816001600160a01b031663370158ea6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105f4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261061c91908101906109aa565b6101200151119392505050565b600061063482610548565b6001600160a01b031663939c44566040518163ffffffff1660e01b8152600401602060405180830381865afa158015610671573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e9190610b65565b61069d61070e565b6001600160a01b0381166107025760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102a0565b61070b81610768565b50565b6000546001600160a01b031633146105465760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102a0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461070b57600080fd5b6000602082840312156107df57600080fd5b81356107ea816107b8565b9392505050565b8051801515811461080157600080fd5b919050565b60006020828403121561081857600080fd5b6107ea826107f1565b8051610801816107b8565b634e487b7160e01b600052604160045260246000fd5b604051610160810167ffffffffffffffff811182821017156108665761086661082c565b60405290565b60005b8381101561088757818101518382015260200161086f565b50506000910152565b600082601f8301126108a157600080fd5b815167ffffffffffffffff808211156108bc576108bc61082c565b604051601f8301601f19908116603f011681019082821181831017156108e4576108e461082c565b816040528381528660208588010111156108fd57600080fd5b61090e84602083016020890161086c565b9695505050505050565b6000806000806080858703121561092e57600080fd5b8451610939816107b8565b602086015190945067ffffffffffffffff8082111561095757600080fd5b61096388838901610890565b9450604087015191508082111561097957600080fd5b5061098687828801610890565b606096909601519497939650505050565b805162ffffff8116811461080157600080fd5b6000602082840312156109bc57600080fd5b815167ffffffffffffffff808211156109d457600080fd5b9083019061016082860312156109e957600080fd5b6109f1610842565b6109fa83610821565b8152610a0860208401610821565b6020820152610a1960408401610821565b6040820152610a2a60608401610821565b60608201526080830151608082015260a083015160a082015260c083015182811115610a5557600080fd5b610a6187828601610890565b60c083015250610a7360e08401610997565b60e08201526101009150610a888284016107f1565b82820152610120915081830151828201526101409150610aa98284016107f1565b91810191909152949350505050565b60008151808452610ad081602086016020860161086c565b601f01601f19169290920160200192915050565b6000610120808352610af88184018d610ab8565b90508281036020840152610b0c818c610ab8565b6001600160a01b038b811660408601528a811660608601528916608085015260a0840188905260c0840187905260e084018690528381036101008501529050610b558185610ab8565b9c9b505050505050505050505050565b600060208284031215610b7757600080fd5b505191905056fea26469706673582212205b5164c43fd70ec78aff24b7efdd7dfe0f2bf5acfbecbf7af949222b429a187864736f6c63430008130033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063a00745b611610071578063a00745b61461012f578063aef7650114610142578063c3c5a54714610163578063d4ed77b514610186578063efcd708f146101af578063f2fde38b146101d857600080fd5b80634420e486146100ae57806356131006146100c3578063715018a6146100eb57806377ce88eb146100f35780638da5cb5b1461011e575b600080fd5b6100c16100bc3660046107cd565b6101eb565b005b6100d66100d13660046107cd565b6104c2565b60405190151581526020015b60405180910390f35b6100c1610534565b6101066101013660046107cd565b610548565b6040516001600160a01b0390911681526020016100e2565b6000546001600160a01b0316610106565b6100d661013d3660046107cd565b6105a7565b6101556101503660046107cd565b610629565b6040519081526020016100e2565b6100d66101713660046107cd565b60016020526000908152604090205460ff1681565b6101066101943660046107cd565b6003602052600090815260409020546001600160a01b031681565b6101066101bd3660046107cd565b6002602052600090815260409020546001600160a01b031681565b6100c16101e63660046107cd565b610695565b60048054604051632066bf6d60e21b815233928101929092526001600160a01b03169063819afdb490602401602060405180830381865afa158015610234573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102589190610806565b6102a95760405162461bcd60e51b815260206004820152601960248201527f50726573616c654d616e616765723a20464f5242494444454e0000000000000060448201526064015b60405180910390fd5b600080600080846001600160a01b0316636addb6636040518163ffffffff1660e01b81526004016000604051808303816000875af11580156102ef573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103179190810190610918565b6001600160a01b0384166000908152600160205260409020549397509195509350915060ff16156103955760405162461bcd60e51b815260206004820152602260248201527f50726573616c654d616e616765723a20414c52454144595f5245474953544552604482015261115160f21b60648201526084016102a0565b6000856001600160a01b031663370158ea6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156103d5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526103fd91908101906109aa565b6001600160a01b0380871660009081526002602090815260408083208054858d166001600160a01b031991821681179092556001808552838620805460ff19169091179055828701805190961685526003909352928190208054909216909217905560608301519151608084015160a085015160c086015193519596507f5907e68cbd0987ce3c33605889d26eb3a84e33833c3ccb79192c00ca73f70731956104b2958b958b958e95929490938c9290610ae4565b60405180910390a1505050505050565b60006104cd82610548565b6001600160a01b031663d4ac98fc6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561050a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e9190610806565b92915050565b61053c61070e565b6105466000610768565b565b6001600160a01b0381811660009081526002602052604081205490911661058857506001600160a01b039081166000908152600360205260409020541690565b506001600160a01b039081166000908152600260205260409020541690565b6000806105b383610548565b905042816001600160a01b031663370158ea6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156105f4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261061c91908101906109aa565b6101200151119392505050565b600061063482610548565b6001600160a01b031663939c44566040518163ffffffff1660e01b8152600401602060405180830381865afa158015610671573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061052e9190610b65565b61069d61070e565b6001600160a01b0381166107025760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102a0565b61070b81610768565b50565b6000546001600160a01b031633146105465760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102a0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6001600160a01b038116811461070b57600080fd5b6000602082840312156107df57600080fd5b81356107ea816107b8565b9392505050565b8051801515811461080157600080fd5b919050565b60006020828403121561081857600080fd5b6107ea826107f1565b8051610801816107b8565b634e487b7160e01b600052604160045260246000fd5b604051610160810167ffffffffffffffff811182821017156108665761086661082c565b60405290565b60005b8381101561088757818101518382015260200161086f565b50506000910152565b600082601f8301126108a157600080fd5b815167ffffffffffffffff808211156108bc576108bc61082c565b604051601f8301601f19908116603f011681019082821181831017156108e4576108e461082c565b816040528381528660208588010111156108fd57600080fd5b61090e84602083016020890161086c565b9695505050505050565b6000806000806080858703121561092e57600080fd5b8451610939816107b8565b602086015190945067ffffffffffffffff8082111561095757600080fd5b61096388838901610890565b9450604087015191508082111561097957600080fd5b5061098687828801610890565b606096909601519497939650505050565b805162ffffff8116811461080157600080fd5b6000602082840312156109bc57600080fd5b815167ffffffffffffffff808211156109d457600080fd5b9083019061016082860312156109e957600080fd5b6109f1610842565b6109fa83610821565b8152610a0860208401610821565b6020820152610a1960408401610821565b6040820152610a2a60608401610821565b60608201526080830151608082015260a083015160a082015260c083015182811115610a5557600080fd5b610a6187828601610890565b60c083015250610a7360e08401610997565b60e08201526101009150610a888284016107f1565b82820152610120915081830151828201526101409150610aa98284016107f1565b91810191909152949350505050565b60008151808452610ad081602086016020860161086c565b601f01601f19169290920160200192915050565b6000610120808352610af88184018d610ab8565b90508281036020840152610b0c818c610ab8565b6001600160a01b038b811660408601528a811660608601528916608085015260a0840188905260c0840187905260e084018690528381036101008501529050610b558185610ab8565b9c9b505050505050505050505050565b600060208284031215610b7757600080fd5b505191905056fea26469706673582212205b5164c43fd70ec78aff24b7efdd7dfe0f2bf5acfbecbf7af949222b429a187864736f6c63430008130033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 13773,
        "contract": "contracts/presale-manager/PresaleManager.sol:PresaleManager",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 17310,
        "contract": "contracts/presale-manager/PresaleManager.sol:PresaleManager",
        "label": "isRegistered",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      },
      {
        "astId": 17314,
        "contract": "contracts/presale-manager/PresaleManager.sol:PresaleManager",
        "label": "presales",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 17318,
        "contract": "contracts/presale-manager/PresaleManager.sol:PresaleManager",
        "label": "presalesByPool",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_address)"
      },
      {
        "astId": 17321,
        "contract": "contracts/presale-manager/PresaleManager.sol:PresaleManager",
        "label": "config",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(Configuration)16354"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(Configuration)16354": {
        "encoding": "inplace",
        "label": "contract Configuration",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_address)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  }
}